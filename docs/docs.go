// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/add-questions": {
            "post": {
                "description": "Um novo metodo de adicionar as questoes no back",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Questions"
                ],
                "summary": "Adicionar as questoes",
                "parameters": [
                    {
                        "description": "Dados do Doutor a ser criado",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/inter.Resp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Doutor criado com sucesso",
                        "schema": {
                            "$ref": "#/definitions/inter.OutputDoctor"
                        }
                    }
                }
            }
        },
        "/api/add-pacient": {
            "post": {
                "description": "Criar um novo paciente",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pacient"
                ],
                "summary": "Criar Paciente",
                "parameters": [
                    {
                        "description": "Dados do paciente a ser criado",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pInter.InputPacient"
                        }
                    },
                    {
                        "type": "string",
                        "default": "Bearer \u003ctoken\u003e",
                        "description": "Token de autenticação (Colocar o token deixando o Bearer)",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "token make:",
                        "schema": {
                            "$ref": "#/definitions/pInter.Pacient"
                        }
                    }
                }
            }
        },
        "/api/creat-orientation": {
            "post": {
                "description": "Adicionar orientações ao paciente",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pacient"
                ],
                "summary": "Adicionar orientação",
                "parameters": [
                    {
                        "description": "Todas as questoes.",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pInter.OrientationController"
                        }
                    },
                    {
                        "type": "string",
                        "default": "Bearer \u003ctoken\u003e",
                        "description": "Token de autenticação (Colocar o token deixando o Bearer)",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Questions input in db",
                        "schema": {
                            "$ref": "#/definitions/pInter.OrientationOutPut"
                        }
                    },
                    "404": {
                        "description": "Questions not inputing",
                        "schema": {
                            "$ref": "#/definitions/erros.NotFound"
                        }
                    }
                }
            }
        },
        "/api/create-doctor": {
            "post": {
                "description": "Cria um novo Doutor no banco de dados",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Doctor"
                ],
                "summary": "Cria um novo Doutor",
                "parameters": [
                    {
                        "description": "Dados do Doutor a ser criado",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/inter.ControllerDoctor"
                        }
                    },
                    {
                        "type": "string",
                        "default": "Bearer \u003ctoken\u003e",
                        "description": "Token de autenticação (Colocar o token deixando o Bearer)",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Doutor criado com sucesso",
                        "schema": {
                            "$ref": "#/definitions/inter.OutputDoctor"
                        }
                    },
                    "406": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/erros.NotAcceptable"
                        }
                    }
                }
            }
        },
        "/api/modif-skill": {
            "put": {
                "description": "Mudar o valor da habilidade do paciente",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Skill"
                ],
                "summary": "Editar Skills",
                "parameters": [
                    {
                        "description": "Dados da habilidade",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/sInter.Skills"
                        }
                    },
                    {
                        "type": "string",
                        "default": "Bearer \u003ctoken\u003e",
                        "description": "Token de autenticação (Colocar o token deixando o Bearer)",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Habilidade editada com sucesso",
                        "schema": {
                            "$ref": "#/definitions/inter.OutputDoctor"
                        }
                    },
                    "406": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/erros.NotAcceptable"
                        }
                    }
                }
            }
        },
        "/api/modify-doctor": {
            "put": {
                "description": "Altera o doutor, tem que me passar oque precisa alterar",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Doctor"
                ],
                "summary": "Altera Doutor",
                "parameters": [
                    {
                        "description": "Dados do Doutor a ser criado",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/inter.ControllerDoctor"
                        }
                    },
                    {
                        "type": "string",
                        "default": "Bearer \u003ctoken\u003e",
                        "description": "Token de autenticação (Colocar o token deixando o Bearer)",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Doutor criado com sucesso",
                        "schema": {
                            "$ref": "#/definitions/inter.OutputDoctor"
                        }
                    }
                }
            }
        },
        "/api/pacient-name": {
            "get": {
                "description": "Pegar os dados do paciente atraves do nome completo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pacient"
                ],
                "summary": "Pegar os dados do paciente",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Nome Completo Do Paciente",
                        "name": "Name",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "Bearer \u003ctoken\u003e",
                        "description": "Token de autenticação (Colocar o token deixando o Bearer)",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paciente recuperado com sucesso",
                        "schema": {
                            "$ref": "#/definitions/pInter.OutputPacient"
                        }
                    },
                    "404": {
                        "description": "Paciente não encontrado",
                        "schema": {
                            "$ref": "#/definitions/erros.NotFound"
                        }
                    }
                }
            }
        },
        "/api/pull-orientation": {
            "get": {
                "description": "Puxa orientações do banco",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pacient"
                ],
                "summary": "Puxar orientação",
                "parameters": [
                    {
                        "type": "string",
                        "description": "E-mail do paciente",
                        "name": "Email",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "Bearer \u003ctoken\u003e",
                        "description": "Token de autenticação (Colocar o token deixando o Bearer)",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Questions input in db",
                        "schema": {
                            "$ref": "#/definitions/pInter.OutputPacient"
                        }
                    },
                    "404": {
                        "description": "Questions not inputing",
                        "schema": {
                            "$ref": "#/definitions/erros.NotFound"
                        }
                    }
                }
            }
        },
        "/api/pull-patient": {
            "get": {
                "description": "Busca um paciente pelo e-mail no banco de dados",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pacient"
                ],
                "summary": "Recupera um paciente",
                "parameters": [
                    {
                        "type": "string",
                        "description": "E-mail do paciente",
                        "name": "Email",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "Bearer \u003ctoken\u003e",
                        "description": "Token de autenticação (Colocar o token deixando o Bearer)",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paciente recuperado com sucesso",
                        "schema": {
                            "$ref": "#/definitions/pInter.OutputPacient"
                        }
                    },
                    "404": {
                        "description": "Paciente não encontrado",
                        "schema": {
                            "$ref": "#/definitions/erros.NotFound"
                        }
                    }
                }
            }
        },
        "/api/pull-profile": {
            "get": {
                "description": "Puxa todas as informaçoes do usuario.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pacient"
                ],
                "summary": "Puxar infos paciente",
                "parameters": [
                    {
                        "type": "string",
                        "description": "E-mail do paciente",
                        "name": "Email",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "Bearer \u003ctoken\u003e",
                        "description": "Token de autenticação (Colocar o token deixando o Bearer)",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paciente recuperado com sucesso",
                        "schema": {
                            "$ref": "#/definitions/pInter.OutputPacient"
                        }
                    },
                    "404": {
                        "description": "Paciente não encontrado",
                        "schema": {
                            "$ref": "#/definitions/erros.NotFound"
                        }
                    }
                }
            }
        },
        "/api/pull-questions": {
            "get": {
                "description": "Puxar as questoes no back",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Questions"
                ],
                "summary": "Puxar as questoes",
                "parameters": [
                    {
                        "enum": [
                            "Portage"
                        ],
                        "type": "string",
                        "description": "Formularios : ",
                        "name": "EnumFormsName",
                        "in": "header",
                        "required": true
                    },
                    {
                        "enum": [
                            "Portage - Desenvolvimento Motor",
                            "Portage - Auto cuidados",
                            "Portage - Socializacao",
                            "Portage - Linguagem",
                            "Portage - Cognicao"
                        ],
                        "type": "string",
                        "description": "Categorias : ",
                        "name": "EnumCategories",
                        "in": "header",
                        "required": true
                    },
                    {
                        "enum": [
                            "0 - 1",
                            "1 - 2",
                            "2 - 3",
                            "3 - 4",
                            "4 - 5",
                            "5 - 6"
                        ],
                        "type": "string",
                        "description": "Age Rate : ",
                        "name": "EnumAges",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "Bearer \u003ctoken\u003e",
                        "description": "Token de autenticação (Colocar o token deixando o Bearer)",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Doutor criado com sucesso",
                        "schema": {
                            "$ref": "#/definitions/inter.BaseQuestions"
                        }
                    }
                }
            }
        },
        "/api/question-mark": {
            "post": {
                "description": "Adiciona questoes ao banco",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pacient"
                ],
                "summary": "Adiciona questoes",
                "parameters": [
                    {
                        "description": "Todas as questoes.",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pInter.CotrollerQuestionsMarker"
                        }
                    },
                    {
                        "type": "string",
                        "default": "Bearer \u003ctoken\u003e",
                        "description": "Token de autenticação (Colocar o token deixando o Bearer)",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Questions input in db",
                        "schema": {
                            "$ref": "#/definitions/pInter.OutputPacient"
                        }
                    },
                    "404": {
                        "description": "Questions not inputing",
                        "schema": {
                            "$ref": "#/definitions/erros.NotFound"
                        }
                    }
                }
            }
        },
        "/api/search-doctor": {
            "get": {
                "description": "Buscar um novo Doutor no banco de dados",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Doctor"
                ],
                "summary": "Buscar um doutor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email do doutor",
                        "name": "Email",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "Bearer \u003ctoken\u003e",
                        "description": "Token de autenticação (Colocar o token deixando o Bearer)",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Doutor criado com sucesso",
                        "schema": {
                            "$ref": "#/definitions/inter.OutputDoctor"
                        }
                    }
                }
            }
        },
        "/api/test-token": {
            "post": {
                "description": "Cria um toke para auth do usuario",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Test Token",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003ctoken\u003e",
                        "description": "Token de autenticação",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "token make:",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/token": {
            "get": {
                "description": "Cria um toke para auth do usuario",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Criar token de auth",
                "responses": {
                    "200": {
                        "description": "token make:",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "base.BaseReq": {
            "type": "object",
            "properties": {
                "LogData": {
                    "$ref": "#/definitions/base.LogData"
                },
                "ResponseData": {
                    "$ref": "#/definitions/base.ResponseData"
                }
            }
        },
        "base.LogData": {
            "type": "object",
            "properties": {
                "ExecutionTime": {
                    "type": "string"
                },
                "HttpStatusCode": {
                    "type": "integer"
                },
                "IP": {
                    "type": "string"
                },
                "Route": {
                    "type": "string"
                }
            }
        },
        "base.ResponseData": {
            "type": "object",
            "properties": {
                "Response": {}
            }
        },
        "erros.Message": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "erros.NotAcceptable": {
            "type": "object",
            "properties": {
                "LogData": {
                    "$ref": "#/definitions/base.LogData"
                },
                "NotAcceptable": {
                    "$ref": "#/definitions/erros.Message"
                }
            }
        },
        "erros.NotFound": {
            "type": "object",
            "properties": {
                "BaseReq": {
                    "$ref": "#/definitions/base.BaseReq"
                },
                "NotFound": {
                    "$ref": "#/definitions/erros.Message"
                },
                "Response": {}
            }
        },
        "inter.BaseQuestions": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "string"
                },
                "categories": {
                    "type": "string"
                },
                "forms_name": {
                    "type": "string"
                },
                "question": {
                    "type": "string"
                }
            }
        },
        "inter.ControllerDoctor": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "district": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "zipCode": {
                    "type": "string"
                }
            }
        },
        "inter.OutputDoctor": {
            "type": "object",
            "properties": {
                "Login_idLogin": {
                    "type": "integer"
                },
                "city": {
                    "type": "string"
                },
                "create_at": {
                    "type": "string"
                },
                "district": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "update_at": {
                    "type": "string"
                },
                "zipCode": {
                    "type": "string"
                }
            }
        },
        "inter.Question": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                }
            }
        },
        "inter.Resp": {
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "$ref": "#/definitions/inter.Question"
                }
            }
        },
        "pInter.Brothers": {
            "type": "object",
            "properties": {
                "health": {
                    "type": "string"
                },
                "neuroDivergent": {
                    "type": "string"
                }
            }
        },
        "pInter.CotrollerQuestionsMarker": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "string"
                },
                "doctor_Email": {
                    "type": "string"
                },
                "forms_name": {
                    "type": "string"
                },
                "pacient_Email": {
                    "type": "string"
                },
                "questions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pInter.QuestionsMark"
                    }
                }
            }
        },
        "pInter.Family": {
            "type": "object",
            "properties": {
                "brothers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pInter.Brothers"
                    }
                },
                "parents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pInter.Parents"
                    }
                }
            }
        },
        "pInter.InputPacient": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "doctor": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "family": {
                    "$ref": "#/definitions/pInter.Family"
                },
                "gender": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "neuroDivergent": {
                    "type": "string"
                },
                "pdfContent": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "phone": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "score": {
                    "type": "integer"
                }
            }
        },
        "pInter.OrientationController": {
            "type": "object",
            "properties": {
                "pacient_Email": {
                    "type": "string"
                },
                "precautions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pInter.OrientationPrecautions"
                    }
                }
            }
        },
        "pInter.OrientationOutPut": {
            "type": "object",
            "properties": {
                "pacientId": {
                    "type": "string"
                },
                "precautions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pInter.OrientationPrecautions"
                    }
                }
            }
        },
        "pInter.OrientationPrecautions": {
            "type": "object",
            "properties": {
                "checkBox": {
                    "type": "boolean"
                },
                "orietation": {
                    "type": "string"
                }
            }
        },
        "pInter.OutputPacient": {
            "type": "object",
            "properties": {
                "Doctor_idDoctor": {
                    "type": "integer"
                },
                "Family_idFamily": {
                    "type": "integer"
                },
                "Login_idLogin": {
                    "type": "integer"
                },
                "Skills_idSkills": {
                    "type": "integer"
                },
                "age": {
                    "type": "integer"
                },
                "create_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "neuroDivergent": {
                    "type": "string"
                },
                "pdfContent": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "phone": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "score": {
                    "type": "integer"
                },
                "update_at": {
                    "type": "string"
                }
            }
        },
        "pInter.Pacient": {
            "type": "object",
            "properties": {
                "Doctor_idDoctor": {
                    "type": "integer"
                },
                "Family_idFamily": {
                    "type": "integer"
                },
                "Login_idLogin": {
                    "type": "integer"
                },
                "Skills_idSkills": {
                    "type": "integer"
                },
                "age": {
                    "type": "integer"
                },
                "create_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "neuroDivergent": {
                    "type": "string"
                },
                "pdfContent": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "phone": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "score": {
                    "type": "integer"
                },
                "update_at": {
                    "type": "string"
                }
            }
        },
        "pInter.Parents": {
            "type": "object",
            "properties": {
                "neuroDivergent": {
                    "type": "string"
                },
                "relationShip": {
                    "type": "string"
                }
            }
        },
        "pInter.QuestionsMark": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "boolean"
                },
                "question": {
                    "type": "string"
                },
                "question_id": {
                    "type": "integer"
                }
            }
        },
        "sInter.Skills": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Milie Mind",
	Description:      "This is a server for app.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
